@use "../config/config"as config;

//font size
@function get_vw($size, $viewport:1366) {
  $rate: 100 / $viewport;
  @return $rate * $size * 1vw;
}

@function spget_vw($size, $spviewport:1024) {
  $rate: 100 / $spviewport;
  @return $rate * $size * 1vw;
}

@mixin font_vw($font_size:10) {
  font-size: get_vw($font_size);

  @include config.mq() {
    font-size: spget_vw($font_size);
  }
}

@mixin width_vw($box_size:10) {
  width: get_vw($box_size);

  @include config.mq() {
    width: spget_vw($box_size);
  }
}

@mixin height_vw($height_size:10) {
  height: $height_size * 1px;

  @include config.mq(md) {
    height: get_vw($height_size);
  }

  @include config.mq() {
    height: spget_vw($height_size);
  }
}

@mixin text-crop($line-height: 1.3, $top-adjustment: 0px, $bottom-adjustment: 0px) {
  // Configured in Step 1
  $top-crop: 9;
  $bottom-crop: 8;
  $crop-font-size: 36;
  $crop-line-height: 1.2;

  // Apply values to calculate em-based margins that work with any font size
  $dynamic-top-crop: max(($top-crop + ($line-height - $crop-line-height) * ($crop-font-size / 2)), 0) / $crop-font-size;
  $dynamic-bottom-crop: max(($bottom-crop + ($line-height - $crop-line-height) * ($crop-font-size / 2)), 0) / $crop-font-size;

  // Mixin output
  line-height: $line-height;

  &::before,
  &::after {
      content: '';
      display: block;
      height: 0;
      width: 0;
  }

  &::before {
      margin-bottom: calc(-#{$dynamic-top-crop}em + #{$top-adjustment});
  }

  &::after {
      margin-top: calc(-#{$dynamic-bottom-crop}em + #{$bottom-adjustment});
  }
}
// Mixin generated at: http://text-crop.eightshapes.com/?typeface-selection=custom-font&typeface=Lato&custom-typeface-name=Gotham%20pro&custom-typeface-url=&custom-typeface-weight=400&custom-typeface-style=normal&weight-and-style=100&size=36&line-height=1.2&top-crop=9&bottom-crop=8



//menuhover
@mixin menuhover() {
  overflow: hidden;
  

  span {
    position: relative;
    transition: all .3s;
    top: 0;
    backface-visibility:hidden;
    -webkit-backface-visibility:hidden;
    perspective: 1000;
   
    


    &:before {
      content: attr(data-hover);
      position: absolute;
      top: 100%;
      color: config.$black;
      left: 0;
    }
  }


  &:hover {
    span {
      transform: translateY(-100%);
      @include config.mq() {
        transform: none;
      }
    }
  }
}




//menu line
@mixin menuline() {
  display: block;


  &::before {
    content: "";
    height: 1px;
    width: 0;
    background: config.$black;
    left: 0;
    top: 50%;
    position: absolute;
    transition: .4s;
    transform: translateY(-50%);
  }

  &:hover {
    &::before {
      @include width_vw(55);
      left: 0;
    }
    @include config.mq() {
      &::before {
        display: none;
      }
    }
  }
}

//btn
@mixin btn() {
  @include font_vw(18);
  position: relative;
  z-index: 1;
  @include width_vw(190);
  cursor: pointer;

  @include config.mq() {
    width: 100%;
    @include font_vw(42);
  }

  &::before,
  &::after {
    content: "";
    position: absolute;
    transition: .3s all;
  }

  &::before {
    width: calc(100% - 1px);
    height: calc(100% + 1px);
    background: config.$black;
    top: 0;
    right: 0;
  }

  &::after {
    width: 0;
    top: 50%;
    transform: translateY(-50%);
    left: 85%;
    height: 1px;
    background: config.$black;
  }

  &__wrap {
    position: relative;
    width: 100%;
    display: block;

    &::before,
    &::after {
      content: "";
      position: absolute;
      background: config.$black;
      top: 0;
      transition: .3s all;
      width: 0;
      height: 0;
    }

    &::before {
      left: 0;
    }

    &::after {
      right: 0;
    }
  }

  &__wrap__line,
  a {
    display: block;
    color: #FFF;
    width: 100%;
    padding: 5% 0;
    text-align: center;
    transition: .5s all;
    z-index: 1;

    @include config.mq() {
      padding: 3% 0;
      transition: none;
    }

    &::before,
    &::after {
      content: "";
      position: absolute;
      background: config.$black;
      bottom: -1px;
      transition: .3s all;
      width: 0;
      height: 0;
    }

    &::before {
      right: 0;
    }

    &::after {
      left: -1px;
    }
  }

  &:hover {
    &::before {
      width: 0;
      
    }

    &::after {
      width: 30%;
      transition-delay: 1s;
    }

    @include config.mq() {

      &::before,
      &:after {
       display: none;
        
        transition: none;
      }
    }

    .btn__wrap {
      &::before {
        width: 100%;
        height: 1px;
      }

      &:after {
        height: calc(100% + 1px);
        width: 1px;
        transition-delay: .3s;
      }

      @include config.mq() {

        &::before,
        &:after {
          display: none;
          transition: none;
        }
      }
    }

    .btn__wrap__line,
    a {
      background: config.$white;
      color: config.$black;

      &::before {
        width: 100%;
        height: 1px;
        transition-delay: .45s;
      }

      &:after {
        height: calc(100% + 1px);
        width: 1px;
        transition-delay: .7s;
      }

      @include config.mq() {
        background: config.$black;
        color: config.$white;
        transition: none;
        &::before,
        &:after {
          display: none;
        }
      }
    }



  }
}

//texthide
@mixin texthide {
  color: transparent;
  overflow: hidden;
  display: table;
  position: relative;
  animation: mvcopy linear .4s forwards;

  &:before {
    content: "";
    background: config.$black;
    width: 0;
    height: 100%;
    position: absolute;
    left: 0;
    top: 0;
    animation: mvhide linear .4s forwards;
    backface-visibility:hidden;
  }
}

@mixin texthide02 {
  color: transparent;
  overflow: hidden;
  display: table;
  position: relative;
  animation: mvcopy02 linear .4s forwards;

  &:before {
    content: "";
    background: config.$black;
    width: 0;
    height: 100%;
    position: absolute;
    left: 0;
    top: 0;
    animation: mvhide linear .4s forwards;
  }
}


//about line
@mixin aboutline() {
  transition: .4s;

  &::before {
    content: "";
    height: 1px;
    width: 0;
    background: config.$black;
    left: -100%;
    top: 50%;
    position: absolute;
    transition: .4s;
    transform: translateY(-50%);
    @include config.mq() {
      content: none;
    }
  }

  &:hover {
    letter-spacing: 3px;

    &:before {
      width: 99.5%;
    }

    @include config.mq() {
      letter-spacing: .04em;
    }
  }
}